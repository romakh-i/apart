{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Default store that keeps state in a simple object.\n */\n\n\nvar DefaultStore = function () {\n  function DefaultStore() {\n    _classCallCheck(this, DefaultStore);\n\n    this.state = {};\n    this.callbacks = [];\n  }\n\n  DefaultStore.prototype.getState = function getState() {\n    return this.state;\n  };\n\n  DefaultStore.prototype.setState = function setState(patch) {\n    var prevState = _extends({}, this.state);\n\n    var nextState = _extends({}, this.state, patch);\n\n    this.state = nextState;\n\n    this._publish(prevState, nextState, patch);\n  };\n\n  DefaultStore.prototype.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    this.callbacks.push(listener);\n    return function () {\n      // Remove the listener.\n      _this.callbacks.splice(_this.callbacks.indexOf(listener), 1);\n    };\n  };\n\n  DefaultStore.prototype._publish = function _publish() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.callbacks.forEach(function (listener) {\n      listener.apply(undefined, args);\n    });\n  };\n\n  return DefaultStore;\n}();\n\nmodule.exports = function defaultStore() {\n  return new DefaultStore();\n};","map":null,"metadata":{},"sourceType":"script"}