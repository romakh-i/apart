{"ast":null,"code":"import _classCallCheck from \"/home/ivan/Documents/apart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ivan/Documents/apart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ivan/Documents/apart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ivan/Documents/apart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ivan/Documents/apart/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ivan/Documents/apart/src/components/FileInput.tsx\";\nimport React, { Component } from 'react';\nimport Uppy from '@uppy/core';\nimport InputFile from '@uppy/file-input';\nimport Tus from '@uppy/tus';\nimport ProgressBar from '@uppy/progress-bar';\n\nvar FileInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileInput, _Component);\n\n  function FileInput() {\n    _classCallCheck(this, FileInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FileInput).apply(this, arguments));\n  }\n\n  _createClass(FileInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var uppy = Uppy({\n        debug: true,\n        autoProceed: false\n      });\n      uppy.use(InputFile, {\n        // target: '#fileInput',\n        pretty: false\n      });\n      uppy.use(Tus, {\n        endpoint: 'https://master.tus.io/files/'\n      }).use(ProgressBar, {\n        target: '#progress',\n        hideAfterFinish: false\n      });\n      uppy.on('file-added', function (file) {\n        console.log('state', uppy.getState());\n        console.log('Added file');\n        console.log($('.uppy-FileInput-input'));\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          console.log('e   ', e);\n          $('#loaded-img').attr('src', e.target.result).width(150).height(200);\n        };\n\n        reader.readAsDataURL(new Blob(file));\n      });\n      $('#upload').click(function (e) {\n        e.preventDefault();\n        uppy.upload();\n      });\n      uppy.on('complete', function (_ref) {\n        var successful = _ref.successful,\n            failed = _ref.failed;\n\n        if (successful.length) {\n          console.log('successful files:', successful);\n          console.log($('input'));\n        }\n\n        if (failed.length) console.log('failed files:', failed);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"loaded-img\",\n        src: \"\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"fileInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"upload\",\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Upload\"));\n    }\n  }]);\n\n  return FileInput;\n}(Component);\n\nexport { FileInput as default };","map":{"version":3,"sources":["/home/ivan/Documents/apart/src/components/FileInput.tsx"],"names":["React","Component","Uppy","InputFile","Tus","ProgressBar","FileInput","uppy","debug","autoProceed","use","pretty","endpoint","target","hideAfterFinish","on","file","console","log","getState","$","reader","FileReader","onload","e","attr","result","width","height","readAsDataURL","Blob","click","preventDefault","upload","successful","failed","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Uppy from '@uppy/core';\nimport InputFile from '@uppy/file-input';\nimport Tus from '@uppy/tus';\nimport ProgressBar from '@uppy/progress-bar';\n\nexport default class FileInput extends Component {\n  componentDidMount() {\n    const uppy = Uppy({\n      debug: true,\n      autoProceed: false,\n    });\n\n    uppy.use(InputFile, {\n      // target: '#fileInput',\n      pretty: false\n    });\n\n    uppy.use(Tus, { endpoint: 'https://master.tus.io/files/' })\n      .use(ProgressBar, { target: '#progress', hideAfterFinish: false });\n\n    uppy.on('file-added', (file) => {\n      console.log('state', uppy.getState());\n\n      console.log('Added file');\n      console.log($('.uppy-FileInput-input'));\n\n      var reader = new FileReader();\n      reader.onload = function (e: any) {\n        console.log('e   ', e);\n        $('#loaded-img')\n          .attr('src', e.target.result)\n          .width(150)\n          .height(200);\n      };\n      reader.readAsDataURL(new Blob(file));\n    })\n\n    $('#upload').click(function (e: any) {\n      e.preventDefault();\n      uppy.upload();\n    });\n\n    uppy.on('complete', ({ successful, failed }) => {\n      if (successful.length) {\n        console.log('successful files:', successful)\n        console.log($('input'));\n      }\n      if (failed.length)\n        console.log('failed files:', failed)\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <img id=\"loaded-img\" src=\"\" alt=\"\" />\n        <div id=\"fileInput\" ></div>\n        <div id=\"progress\"></div>\n        <button id=\"upload\" type='file'>Upload</button>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}